
import java.awt.HeadlessException;
import java.awt.List;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.lang.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author intag
 */
public class history extends javax.swing.JFrame {

    Connection cn;
    String databasename = "view_reminder";
    String url = "jbdc:mysql://localhost:3306/" + databasename;
    String username = "root";
    String password = "plmn@#$_0987";
    Statement stmt;
    ResultSet rs;
    PreparedStatement pst;

    String medname;
    String meddetail;
    String showt;
    String date;

    public history() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public void set_database() throws ClassNotFoundException, SQLException {
        cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/set_reminder", username, password);
        System.out.println("successs");
        if (cn != null) {
            System.out.println("connection done");
        }
    }

    public void close() {
        WindowEvent cwin = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(cwin);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        history1 = new javax.swing.JTable();
        s1 = new javax.swing.JButton();
        t1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("frame11");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HISTORY");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 270, 40));

        jButton1.setText("<--");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        getContentPane().add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 110, -1));

        history1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Details", "TIME", "DATE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(history1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 660, 300));

        s1.setText("SEARCH");
        s1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1ActionPerformed(evt);
            }
        });
        getContentPane().add(s1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 70, 110, -1));
        getContentPane().add(t1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 140, -1));

        getAccessibleContext().setAccessibleName("f2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        close();
        Interface_App app = new Interface_App();
        app.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed

        try {
            DefaultTableModel tbModel = (DefaultTableModel) history1.getModel();
            tbModel.setRowCount(0);

            set_database();
            stmt = cn.createStatement();
            String query = "SELECT * FROM `history12`";
            rs = stmt.executeQuery(query);

            while (rs.next()) {
                String mname = rs.getString("medicine");
                String mdetail = rs.getString("details");
                String time = rs.getString("Time");
                String date = rs.getString("DAte");

                String tblData[] = {mname, mdetail, time, date};
                //      DefaultTableModel tbModel=(DefaultTableModel)history1.getModel();
                tbModel.addRow(tblData);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error in display: " + e);
        }

    }//GEN-LAST:event_refreshActionPerformed

    private void s1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1ActionPerformed

        try {

            DefaultTableModel tbModel = (DefaultTableModel) history1.getModel();
            tbModel.setRowCount(0);

            set_database();
            String sear1 = t1.getText();

            stmt = cn.createStatement();

            String query = ("SELECT * FROM `history12` where medicine ='" + sear1 + "'");
            rs = stmt.executeQuery(query);
            if (sear1.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "PLEASE, ENTER ANY MEDICINE NAME");
            } else if (rs.next() == false && !sear1.trim().isEmpty()) {

                JOptionPane.showMessageDialog(this, t1.getText().toUpperCase() + " MEDICINE RECORD NOT FOUND");
            } else {
                String mname = rs.getString("medicine");
                String mdetail = rs.getString("details");
                String time = rs.getString("time");
                String date = rs.getString("date");

                String tblData[] = {mname, mdetail, time, date};

                tbModel.addRow(tblData);
            }
            t1.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Wrong");
            System.out.println(e);
        }
    }//GEN-LAST:event_s1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view_reminder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view_reminder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view_reminder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view_reminder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new history().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable history1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refresh;
    private javax.swing.JButton s1;
    private javax.swing.JTextField t1;
    // End of variables declaration//GEN-END:variables
}

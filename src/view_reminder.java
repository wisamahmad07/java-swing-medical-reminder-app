
import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.PrintStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author intag
 */
public class view_reminder extends javax.swing.JFrame {

    Connection cn;
    String databasename = "view_reminder";
    String url = "jbdc:mysql://localhost:3306/" + databasename;
    String username = "root";
    String password = "plmn@#$_0987";
    Statement stmt;
    ResultSet rs;
    PreparedStatement pst;

    public view_reminder() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public void set_database() throws ClassNotFoundException, SQLException {
        cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/set_reminder", username, password);
        System.out.println("successs");
        if (cn != null) {
            System.out.println("connection done");
        }
    }

    public void close() {
        WindowEvent cwin = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(cwin);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewtable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        view = new javax.swing.JButton();
        clearview = new javax.swing.JButton();
        deleteview = new javax.swing.JButton();
        searchview = new javax.swing.JButton();
        delete = new javax.swing.JTextField();
        search = new javax.swing.JTextField();
        deleteall = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("VIEW REMINDER");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 377, -1));

        viewtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MEDICINE", "DETAIL", "TIME", "DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewtable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 770, 310));

        jButton1.setText("<--");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        view.setText("REFRESH");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });
        getContentPane().add(view, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 120, 30));

        clearview.setText("CLEAN");
        clearview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearviewActionPerformed(evt);
            }
        });
        getContentPane().add(clearview, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 120, -1));

        deleteview.setText("DELETE");
        deleteview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteviewActionPerformed(evt);
            }
        });
        getContentPane().add(deleteview, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 70, 100, -1));

        searchview.setText("SEARCH");
        searchview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchviewActionPerformed(evt);
            }
        });
        getContentPane().add(searchview, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 110, 100, -1));
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 180, -1));

        search.setToolTipText("");
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 180, -1));
        search.getAccessibleContext().setAccessibleName("");

        deleteall.setText("DELETE ALL");
        deleteall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteallActionPerformed(evt);
            }
        });
        getContentPane().add(deleteall, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 120, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        close();
        Interface_App app = new Interface_App();
        app.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed

        try {
            set_database();
            DefaultTableModel tbModel = (DefaultTableModel) viewtable.getModel();
            tbModel.setRowCount(0);

            stmt = cn.createStatement();
            String query = "SELECT * FROM `set1`";
            rs = stmt.executeQuery(query);

            while (rs.next()) {
                String mname = rs.getString("medname");
                String mdetail = rs.getString("meddetails");
                String time = rs.getString("Time");
                String date = rs.getString("DAte");

                String tblData[] = {mname, mdetail, time, date};

                tbModel.addRow(tblData);
            }

        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Wrong");
            System.out.println(e);
        }


    }//GEN-LAST:event_viewActionPerformed

    private void clearviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearviewActionPerformed
        try {

            DefaultTableModel model = (DefaultTableModel) viewtable.getModel();

            if (model.getRowCount() == 0) {

                JOptionPane.showMessageDialog(this, "SURE, MEDICINE DATA IS CLEANED");
            } else {
                model.setRowCount(0);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

    }//GEN-LAST:event_clearviewActionPerformed

    private void deleteviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteviewActionPerformed
        try {
            set_database();
            String del = delete.getText();
            PreparedStatement pstmt = null;

            String query = "DELETE FROM `set1` WHERE medname = ?";
            pstmt = cn.prepareStatement(query);
            pstmt.setString(1, del);
            int row = pstmt.executeUpdate();

            System.out.println("Number of rows deleted: " + row);

            if (del.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "PLEASE ENTER ANY MEDICINE NAME");
            } else if (row == 0) {
                JOptionPane.showMessageDialog(this, "MEDICINE DATA NOT FOUND");
            } else {
                JOptionPane.showMessageDialog(this, "MEDICINE RECORD IS DELETED PERMANENTLY");
            }
        } catch (Exception e) {
            System.out.println(e);
            // Handle the exception appropriately (show an error message, log the error, etc.)
        } 

    }//GEN-LAST:event_deleteviewActionPerformed

    private void searchviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchviewActionPerformed

        try {
            DefaultTableModel tbModel = (DefaultTableModel) viewtable.getModel();
            tbModel.setRowCount(0);

            set_database();
            String sear = search.getText();

            stmt = cn.createStatement();

            String query = ("SELECT * FROM `set1` where medname ='" + sear + "'");
            rs = stmt.executeQuery(query);
            if (sear.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "PLEASE, ENTER ANY MEDICINE NAME");
            } else if (rs.next() == false && !sear.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "MEDICINE RECORD NOT FOUND");
            } else {
                String mname = rs.getString("medname");
                String mdetail = rs.getString("meddetails");
                String time = rs.getString("Time");
                String date = rs.getString("DAte");

                String tblData[] = {mname, mdetail, time, date};

                tbModel.addRow(tblData);
            }
            search.setText("");
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, "NO MEDICINE YET ENTERED");
            System.out.println(e);
        }
    }//GEN-LAST:event_searchviewActionPerformed

    private void deleteallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteallActionPerformed
        try {
            set_database();
            stmt = cn.createStatement();

            String query = "DELETE FROM set_reminder.set1";
            int row = stmt.executeUpdate(query);
            System.out.println(row);
            if (row == 0) {
                JOptionPane.showMessageDialog(this, "MEDICINE RECORD NOT FOUND");
            } else if (row == 1) {
                JOptionPane.showMessageDialog(this, row + "MEDICINE IS DELETED PERMANENTLY");
            } else {
                JOptionPane.showMessageDialog(this, row + "ALL MEDICINE DATA IS DELETED PERMANENTLY");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, " error in delete");
        }


    }//GEN-LAST:event_deleteallActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new view_reminder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearview;
    private javax.swing.JTextField delete;
    private javax.swing.JButton deleteall;
    private javax.swing.JButton deleteview;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField search;
    private javax.swing.JButton searchview;
    private javax.swing.JButton view;
    private javax.swing.JTable viewtable;
    // End of variables declaration//GEN-END:variables
}
